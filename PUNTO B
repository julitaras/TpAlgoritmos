#include <stdio.h>
void mostrar(VT_Empleados empleado, int cortar_desde, int ml_nacionalidad);
void ordenar_por_anio(VT_Empleados empleado);
void ordenar_por_dia(VT_Empleados empleado, int ml);
int buscar(VT_Empleados empleado, int buscar);
void cortar(VT_Empleados empleado, VT_Empleados menores_a_2000, int cortar_desde);

int main(){
   int i, cortar_desde;
   VT_Empleados empleado;
   VT_Empleados menores_a_2000;
  
   ordenar_por_anio(empleado);
   ordenar_por_dia(empleado);

   cortar_desde = buscar(empleado, 200);
   if(cortar_desde != -1){
       cortar(empleado, menores_a_2000, cortar_desde);
   }

   mostrar(menores_a_2000, cortar_desde);
  
   return 0;
}

void ordenar_por_anio(VT_Empleados empleado){
   int i, j;
   T_Empleado aux;
    for (i=1; i < TAM; i++){
       for(j=0 ; j < TAM - i; j++){
           if (empleado[j].anio > empleado[j+1].anio){
               aux = empleado[j];
               empleado[j] = empleado[j+1];
               empleado[j+1] = aux;   
             }
         }
    }
}

void ordenar_por_dia(VT_Empleados empleado, int ml){
   int i, j;
   t_fecha aux;
    for (i=1; i<TAM; i++){
       for(j=0 ; j<TAM - i; j++){
           if((empleado[j].anio == empleado[j+1].anio) && (empleado[j].mes == empleado[j+1].mes)){
               if (empleado[j].dia > empleado[j+1].dia){
                   aux = empleado[j];
                   empleado[j] = empleado[j+1];
                   empleado[j+1] = aux;   
                 }               
           }
         }
    }
}

int buscar(VT_Empleados empleado, int buscar){
   int medio, inicio, final;
   inicio = 0;
   final = TAM;
    while(inicio <= final){
       medio = (inicio + final)/2;
       if(empleado[medio].anio == buscar){
            return medio;
       }
        if(empleado[medio].anio < buscar){
            inicio = medio+1;
        }
        else{
            final = medio-1;
        }
    }
    return -1;  
}
void cortar(VT_Empleados empleado, VT_Empleados menores_a_2000, int cortar_desde){
   int i, j;
   T_Empleado copia;
   for(i = 0; i < cortar_desde; i++){
       copia.dia = empleado[i].dia;
       copia.mes = empleado[i].mes;
       copia.anio = empleado[i].anio;
       menores_a_2000[i] = copia;
   }  
}

void mostrar(VT_Empleados empleado, int cortar_desde, int ml_nacionalidad){
   int i, j;
   for(i = 0; i < cortar_desde; i++){
       printf("EL EMPLEADO: %i", empleado[i].Apellido_Nombre);
       printf("\n\t\t NaciÃ³ el: %i %i %i", empleado[i].Fecha_De_Nacimiento.dia,
                                           empleado[i].Fecha_De_Nacimiento.mes,
                                           empleado[i].Fecha_De_Nacimiento.anio);
       printf("\n\t\t Sexo: %c\n", empleado[i].Fecha_De_Nacimiento.sexo);
       printf("\n\t\t De nacionalidad(es): \n");
       for(j=0; j < ml_nacionalidad; j++){
           printf("\n\t\t\t %s\n", empleado[i].Nacionalidad[j]);
       }
   }   
}
